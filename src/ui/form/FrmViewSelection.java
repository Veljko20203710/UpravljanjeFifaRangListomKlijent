/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.form;

import controller.Controller;
import domain.Match;
import domain.Selection;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JTable;
import org.apache.log4j.Logger;
import ui.listeners.ListenerDeleteMatch;
import ui.table.ModelTableSelection;

/**
 *
 * @author Veljko
 */
public class FrmViewSelection extends javax.swing.JFrame {

    /**
     * Creates new form FrmViewSelection
     */
    private int startPositon = 0;
    private int tableSize = 5;
    private static Selection selection;
    private ResourceBundle resourceBundle;
    private List<Match> matches;
    private Locale locale;
    private final Logger LOGGER = Logger.getLogger(FrmViewSelection.class);

    public FrmViewSelection(Selection selection) {
        this.selection = selection;
        initComponents();
        setMatches();
        initListeners();
        prepareView();
    }

    private void setMatches() {
        try {
            matches = Controller.getInstance().getMatchesBySelection(selection);
        } catch (Exception ex) {
            LOGGER.error(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JlblSelection = new javax.swing.JLabel();
        jlblSelectionName = new javax.swing.JLabel();
        JLblBackward = new javax.swing.JLabel();
        JLblForward = new javax.swing.JLabel();
        jlbRang = new javax.swing.JLabel();
        jblPoints = new javax.swing.JLabel();
        jlblRang = new javax.swing.JLabel();
        jlblPoints = new javax.swing.JLabel();
        jlblNumberMatches = new javax.swing.JLabel();
        comboTableSize = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMatches = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JlblSelection.setText("Selection:");

        jlblSelectionName.setText("jLabel1");

        JLblBackward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Fast-backward-icon.png"))); // NOI18N
        JLblBackward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLblBackwardMouseClicked(evt);
            }
        });

        JLblForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Button-Forward-icon.png"))); // NOI18N
        JLblForward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLblForwardMouseClicked(evt);
            }
        });

        jlbRang.setText("Rang:");

        jblPoints.setText("Points");

        jlblRang.setText("jLabel3");

        jlblPoints.setText("jLabel4");

        jlblNumberMatches.setText("Prikaz broja meceva:");

        comboTableSize.setModel(new javax.swing.DefaultComboBoxModel<>());
        comboTableSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTableSizeActionPerformed(evt);
            }
        });

        jTableMatches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(jTableMatches);

        btnDelete.setText("jButton1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JLblBackward)
                        .addGap(125, 125, 125)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JLblForward)
                        .addGap(56, 56, 56))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblNumberMatches)
                            .addComponent(JlblSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboTableSize, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblSelectionName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlbRang, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(jblPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(477, 477, 477)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblRang, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(jlblPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JlblSelection)
                    .addComponent(jlblSelectionName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbRang)
                    .addComponent(jlblRang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jblPoints)
                    .addComponent(jlblPoints))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNumberMatches)
                    .addComponent(comboTableSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JLblForward, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JLblBackward, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(24, 24, 24))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JLblBackwardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLblBackwardMouseClicked
        if (startPositon - tableSize < 0) {
            return;
        }
        startPositon -= tableSize;
        setTable();
    }//GEN-LAST:event_JLblBackwardMouseClicked

    private void JLblForwardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLblForwardMouseClicked
        try {
            if (startPositon + tableSize >= Controller.getInstance().getMatchesBySelection(selection).size()) {
                return;
            }
        } catch (Exception ex) {
            LOGGER.error(ex);
        }
        startPositon += tableSize;
        setTable();
    }//GEN-LAST:event_JLblForwardMouseClicked

    private void comboTableSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTableSizeActionPerformed
        tableSize = (int) comboTableSize.getSelectedItem();
        startPositon = 0;
        setTable();
    }//GEN-LAST:event_comboTableSizeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmViewSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmViewSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmViewSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmViewSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmViewSelection(selection).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLblBackward;
    private javax.swing.JLabel JLblForward;
    private javax.swing.JLabel JlblSelection;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<Integer> comboTableSize;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMatches;
    private javax.swing.JLabel jblPoints;
    private javax.swing.JLabel jlbRang;
    private javax.swing.JLabel jlblNumberMatches;
    private javax.swing.JLabel jlblPoints;
    private javax.swing.JLabel jlblRang;
    private javax.swing.JLabel jlblSelectionName;
    // End of variables declaration//GEN-END:variables

    public void setTable() {
        try {
            matches = Controller.getInstance().getMatchesBySelection(selection);
            ModelTableSelection modelTableSelection = new ModelTableSelection(matches, startPositon, tableSize);
            jTableMatches.setModel(modelTableSelection);
            validate();
        } catch (Exception ex) {
            LOGGER.error(ex);
        }
    }

    public List<Match> getMatches() {
        return matches;
    }

    public void setMatches(List<Match> matches) {
        this.matches = matches;
    }

    private void prepareView() {
        setIcon();
        initResourceBundle();
        setText();
        setComboTableSize();
        setBtnDeleteEnabled();
    }

    private void setText() {
        JlblSelection.setText(resourceBundle.getString("Selection"));
        jblPoints.setText(resourceBundle.getString("Points"));
        jlbRang.setText(resourceBundle.getString("Rank"));
        jlblNumberMatches.setText(resourceBundle.getString("jlblNumberMatches"));
        btnDelete.setText(resourceBundle.getString("btnDelete"));
        jlblSelectionName.setText(selection.getName());
        jlblPoints.setText(selection.getPoints() + "");
        jlblRang.setText(selection.getRang() + "");
    }

    private void setComboTableSize() {
        comboTableSize.addItem(5);
        comboTableSize.addItem(10);
        comboTableSize.addItem(15);
    }

    private void setBtnDeleteEnabled() {
        try {
            btnDelete.setEnabled(Controller.getInstance().readAdministrator());
        } catch (Exception ex) {
            LOGGER.error(ex);
        }
    }

    private void setIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Resources/ball.png")));
    }

    private void initResourceBundle() {
        locale = Controller.getLocale();
        resourceBundle = ResourceBundle.getBundle("resourceBundles.resourceBundle_FrmViewSelection_" + locale);
    }

    private void initListeners() {
        btnDelete.addActionListener(new ListenerDeleteMatch(this));
        jTableMatches.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                jTableMatches.getColumnModel().getColumn(1).setMaxWidth(80);
                jTableMatches.getColumnModel().getColumn(3).setMinWidth(100);
                jTableMatches.getColumnModel().getColumn(4).setMinWidth(200);
            }
        });
    }

    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }

    public JTable getjTableMatches() {
        return jTableMatches;
    }

    public void setjTableMatches(JTable jTableMatches) {
        this.jTableMatches = jTableMatches;
    }

    public Selection getSelection() {
        return selection;
    }

    public int getStartPositon() {
        return startPositon;
    }

}
