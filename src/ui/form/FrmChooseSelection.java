/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.form;

import controller.Controller;
import domain.Selection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author Veljko
 */
public class FrmChooseSelection extends javax.swing.JFrame {

    /**
     * Creates new form FrmChoseSelection
     */
    Locale locale;
    private final Logger LOGGER = Logger.getLogger(FrmChooseSelection.class);
    private static String mode;
    private ResourceBundle resourceBundle;
    private Selection selection;

    public FrmChooseSelection(String mode) {
        this.mode = mode;
        initComponents();
        prepareView();
        initListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblFindSelection = new javax.swing.JLabel();
        btnFindSelection = new javax.swing.JButton();
        comboSelection = new javax.swing.JComboBox<>();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jlblFindSelection.setText("jLabel1");

        btnFindSelection.setText("jButton1");

        comboSelection.setModel(new javax.swing.DefaultComboBoxModel<>());

        btnCancel.setText("jButton1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlblFindSelection)
                        .addGap(104, 104, 104)
                        .addComponent(comboSelection, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                        .addComponent(btnFindSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFindSelection)
                    .addComponent(comboSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFindSelection)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmChooseSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmChooseSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmChooseSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmChooseSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmChooseSelection(mode).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFindSelection;
    private javax.swing.JComboBox<Selection> comboSelection;
    private javax.swing.JLabel jlblFindSelection;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        initResourceBundle();
        initTextLabels();
        initComboBox();
    }

    private void initComboBox() {
        comboSelection.removeAllItems();
        try {
            List<Selection> selections = Controller.getInstance().getAllSelections();

            for (Selection selection1 : selections) {
                comboSelection.addItem(selection1);
            }
        } catch (Exception ex) {
            LOGGER.error(ex.getMessage());
        }
    }

    private void initTextLabels() {
        jlblFindSelection.setText(resourceBundle.getString("findSelection"));
        btnCancel.setText(resourceBundle.getString("btnCancel"));
        btnFindSelection.setText(resourceBundle.getString("btnFind"));
    }

    private void initResourceBundle() {
        locale = Controller.getLocale();
        resourceBundle = ResourceBundle.getBundle("resourceBundles.ResourceBundle_FrmChooseSelection_" + locale);
    }

    private void initListeners() {
        initBtnFindListener();
        initBtnCancelListener();
    }

    private void initBtnFindListener() {
        btnFindSelection.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    dispose();
                    selection = (Selection) comboSelection.getSelectedItem();
                    Controller.getInstance().getMatchesBySelection(selection);
                    showFrm();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, resourceBundle.getString("error"), resourceBundle.getString("errorTitle"), 0);
                }
            }
        });
    }

    private void showFrm() {
        if (mode.equals(ChooseSelectionMode.VIEW)) {
            new FrmViewSelection(selection).setVisible(true);
        } else {
            new FrmChangeSelection(selection).setVisible(true);
        }
    }

    private void initBtnCancelListener() {
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
    }
}
